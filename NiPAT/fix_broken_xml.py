__author__ = 'ASR'
import subprocess

'''
The source file 'clone class with source' generated by NiCAD may contain broken XML tags.
It is not XML parseable for finding clone_set that appears together.
This program takes a NiCAD Clone class with source and fixes the broken XML tags. - Moon
'''

'''
def fix_broken_xml_tags(txl_exe_path, nicad_generated_clone_with_source, txl_transformation_prog_path, xml_fixed_file_path):
    fix_xml_cmd = [txl_exe_path, "-s", "1000", "-o", xml_fixed_file_path, nicad_generated_clone_with_source, txl_transformation_prog_path]
    fix_xml_tags = subprocess.call(fix_xml_cmd, stdout=subprocess.PIPE)      # It returns after completion
'''

def fix_broken_xml_tags(nicad_generated_clone_with_source, xml_fixed_file_path):
    fp = open(nicad_generated_clone_with_source, 'r')

    file_content = ""
    for line in fp:
        line = replace_xml_symbol(line)

        if "<source file=FileNameString" in line:  # SpecialCase: not replaced! Full xml tag used inside txl line
            line = line.replace("<", "@")
            file_content += line
            while True:     # continue until the pair </source> found
                line = fp.readline()
                if "</source>" in line:     # also change the nearest end source tag..
                    line = line.replace("<", "@")
                    break
                line = replace_xml_symbol(line)
                file_content += line

        file_content += line
    fp.close()

    dest_file = open(xml_fixed_file_path, 'w')
    print(file_content, file=dest_file)
    dest_file.close()


def replace_xml_symbol(line):
    if "<" in line and "<source" not in line and "</source>" not in line and "<class" not in line and "</class>" not in line and "<clones>" not in line and "</clones>" not in line and "<systeminfo" not in line and "<cloneinfo" not in line and "<runinfo" not in line and "<classinfo" not in line:
        line = line.replace("<", "&lt;")     # line = line.replace("<", "@")

    if '&' in line:
        line = line.replace("&", "&amp;")

    if 'É' in line:     # special character: breaking xml format
        line = line.replace("É", "E")

    if '§' in line:
        line = line.replace("§", "$")

    return line


def main(nicad_generated_clone_with_source, xml_fixed_file_path):
    # txl_bin_directory = input("Enter the path of Txl bin directory(c:/txl/bin):")
    # txl_exe_path = "C:/Users/ASR/Desktop/Txl106a7_32/bin/txl.exe"
    #txl_exe_path = txl_directory + "/txl.exe"   # make path of txl.exe
    # txl_transformation_prog_path = "C:/Users/ASR/Desktop/Txl106a7_32/bin/fix_xml.txl"
    #txl_transformation_prog_path = txl_directory + "/fix_xml.txl"   # make path of fix_xml.txl

    #fix_broken_xml_tags(txl_exe_path, nicad_generated_clone_with_source, txl_transformation_prog_path, xml_fixed_file_path)

    fix_broken_xml_tags(nicad_generated_clone_with_source, xml_fixed_file_path)


'''
# unblock to test individually
nicad_generated_clone_with_source = "C:/cygwin64/home/ASR/NiCad-3.5\examples\TempJMfiles_blocks-normalized-clones\TempJMfiles_blocks-normalized-clones-0.1-classes-withsource.xml"
xml_fixed_file_path = "C:/cygwin64/home/ASR/NiCad-3.5\examples\TempJMfiles_blocks-normalized-clones/fixed.xml"
fix_broken_xml_tags_main(nicad_generated_clone_with_source, xml_fixed_file_path)
'''